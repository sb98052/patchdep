%{
        open Types
        open Printf
%}

%token LSBRACK
%token RSBRACK
%token COMMA
%token NODE
%token <string> IDENT           
%token LINK
%token LBRACE
%token RBRACE
%token EOF
%token SEMICOLON
%token <string> LITERAL

%token <float>          FLOAT
%token <int>            INT
%token <string>         STRING

%start file
%start program
%type <Types.vnetspec> program file
%%

propdef:
        | IDENT LBRACE proplist RBRACE { ($1,Struct($3)) }
        | IDENT LBRACE proplist RBRACE SEMICOLON { ($1,Struct($3)) } 
        | LITERAL SEMICOLON { ("",Literal($1)) } 
        ;

property:
        IDENT propdef { ($1, $2)} 
        ;

proplist:
        | proplist property { $1 @ [$2] }
        |                   { [] }

nodedef:
        | NODE IDENT LBRACE proplist RBRACE { Node($2, $4) }
        ;

linkdef:
        | LINK IDENT LSBRACK IDENT COMMA IDENT RSBRACK LBRACE proplist RBRACE {
                Link($2, $4, $6, $9) }
        ;

element: 
        | nodedef                       { $1 }
        | linkdef                       { $1 }
        ;
 
file: program EOF                       { $1 }
        ;

program:
        | program element               { $1 @ [$2] }
        |                               { [] }
