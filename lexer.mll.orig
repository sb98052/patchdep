 {
        open Parser        (* The type token is defined in parser.mli *)
        exception Eof
}

rule token = parse
  | [' ''\t''\n''\r'] {token lexbuf}
  | "["    { LSBRACK }
  | ","    { COMMA }
  | "]"    { RSBRACK }
  | "Node" { NODE }
  | "Link" { LINK }
  | "{"    { LBRACE }
  | "}"    { RBRACE }
  | ";"    { SEMICOLON }
  | ['"'](['a'-'z''A'-'Z''0'-'9''_''.''-''/']+ as str) ['"'] { LITERAL(str) }
  | ['a'-'z''A'-'Z''.''_''0'-'9']+ as bla { IDENT (bla) }
  | "#"    {let _ = find_eol lexbuf in token lexbuf}
  | eof {EOF}
  and
  find_eol = parse
  | ['\n'] { () }
  | _ {find_eol lexbuf}
